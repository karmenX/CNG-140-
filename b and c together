#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>

void  populate(int **array, int row, int column);
void display(int **array, int row, int column);
void multiplication(int **array1, int **array2, int **result, int row, int column);
void complexAddition(int **array1, int **array2, int **result, int row, int column);

int main() {

    int row,column;
    int **array1,**array2,**result;
    printf("Enter number of rows: ");
    scanf("%d",&row);
    printf("Enter number of columns: ");
    scanf("%d",&column);
    printf("Your Matrices are as follows:\n"
           "=============================\n");

    srand(time(NULL));

    array1=(int**)malloc(sizeof(int)*row );
    if(array1==NULL){
        printf("Memory allocation failed.\n");
        exit(1);
    }
    for(int i=0;i<row;i++){
        array1[i]=(int *) malloc(sizeof (int)*column);
        if(array1[i]==NULL){
            printf("Memory allocation failed.\n");
            exit(1);
        }
    }


    array2=(int**)malloc(sizeof(int)*row );
    if(array2==NULL){
        printf("Memory allocation failed.\n");
        exit(1);
    }
    for(int i=0;i<row;i++) {
        array2[i] = (int *) malloc(sizeof(int) * column);
        if (array2[i] == NULL) {
            printf("Memory allocation failed.\n");
            exit(1);
        }
    }


    result=(int**)malloc(sizeof(int)*row );
        if(result==NULL){
            printf("Memory allocation failed.\n");
            exit(1);
        }
    for(int i=0;i<row;i++) {
        result[i] = (int *) malloc(sizeof(int) * column);
        if (result[i] == NULL) {
            printf("Memory allocation failed.\n");
            exit(1);
        }
    }



    populate(array1,row,column);
    printf("Matrix A is as follows:\n");
    display(array1,row,column);
    printf("\n");
    printf("Matrix B is as follows: \n");
    populate(array2,row,column);
    display(array2,row,column);
    multiplication(array1,array2,result,row,column);
    printf("Results:\n"
           "=============================\n"
           "A * B is as follows:\n");
    display(result,row,column);
    printf("A + B * SinB is as follows:\n");
    complexAddition(array1,array2,result,row,column);
    display(result,row,column);


    return 0;
}
void  populate(int **array, int row, int column){
    for(int i=0;i<row;i++){
        for(int j=0;j<column;j++){
            array[i][j]=rand()%11;
        }
    }

}
void display(int **array,int row, int column){
    for(int i=0;i<row;i++){
        for(int j=0;j<column;j++){
            printf("%5d",array[i][j]);
        }
        printf("\n");
    }


}
void multiplication(int **array1, int **array2, int **result, int row, int column) {

    for (int i = 0; i < row; i++) {
        for (int j = 0; j < column; j++) {
            result[i][j]=0;
            for (int k = 0; k < column; k++) {
                result[i][j] += array1[i][k] * array2[k][j];
            }
        }
    }
}

void complexAddition(int **array1, int **array2, int **result, int row, int column) {

    for (int i = 0; i < row; i++) {
        for (int j = 0; j < column; j++) {
            result[i][j] = array1[i][j] + (2 * sin(array2[i][j]));
        }
    }
}
